name: SonarCloud
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    env:
      BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory # Directory where build-wrapper output will be placed
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - name: Install sonar-scanner and build-wrapper
        uses: SonarSource/sonarcloud-github-c-cpp@v1
      - name: Download deps
        run: |
          sudo apt update && sudo apt upgrade
          git submodule update --init --recursive
          sudo apt install ninja-build libsndfile1-dev  alsa-base libasound2-dev
          # sudo apt install -y qtbase5-dev qttools5-dev qtchooser qt5-qmake qtbase5-dev-tools libqt5svg5-dev qt5-assistant qt5-qmltooling-plugins qt5ct qt5qevercloud-dev qt5keychain-dev
          # sudo apt-get install qtbase5-dev              
          # sudo apt-get install qtdeclarative5-dev       
          # sudo apt-get install qtmultimedia5-dev        
          # sudo apt-get install qt-quickcontrols2-5-dev
      - name: Install qt
        uses: jurplel/install-qt-action@v3
        with:
          modules:
            qtnetworkauth
            # Quick
            # QuickControls2
            # QuickTemplates2
            # QuickWidgets
            # Xml
            # XmlPatterns
            # Svg
            # Widgets
            # PrintSupport
            # OpenGL
            # LinguistTools

      - name: Run build-wrapper
        run: |
          mkdir cmake-build
          cd cmake-build
          cmake .. -GNinja -CMAKE_BUILD_TYPE=Debug
          cd ..
          build-wrapper-linux-x86-64 --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} ninja -C build
      - name: Print log file
        run: |
          cat /home/runner/work/MuseScore/MuseScore/cmake-build/CMakeFiles/CMakeOutput.log

      - name: Run sonar-scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner --define sonar.cfamily.build-wrapper-output="${{ env.BUILD_WRAPPER_OUT_DIR }}"
